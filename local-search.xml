<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="/2025/08/30/Hexo%20+GitHub%20Pages%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/Hexo%20+GitHub%20Pages%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/"/>
    <url>/2025/08/30/Hexo%20+GitHub%20Pages%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/Hexo%20+GitHub%20Pages%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>Hexo + GitHub Pages 核心操作：Git连接、配置与部署</p><p>本部分聚焦核心流程，单独提取并合并 Git连接GitHub、Hexo与GitHub关联配置、博客部署到GitHub Pages 三个关键步骤，方便快速查阅操作。<br> <span id="more"></span><a href=""></a></p><h2 id="一、使用-Git-连接-GitHub-账户（SSH-方式，推荐）"><a href="#一、使用-Git-连接-GitHub-账户（SSH-方式，推荐）" class="headerlink" title="一、使用 Git 连接 GitHub 账户（SSH 方式，推荐）"></a>一、使用 Git 连接 GitHub 账户（SSH 方式，推荐）</h2><p>SSH 连接可避免每次部署重复输入账号密码，操作如下：</p><p>1. 打开命令行（Windows 用 Git Bash或cmd，macOS&#x2F;Linux 用终端），输入命令生成 SSH 密钥(<a href="mailto:&#x79;&#x6f;&#x75;&#x72;&#x5f;&#101;&#109;&#x61;&#x69;&#108;&#64;&#x65;&#x78;&#x61;&#x6d;&#112;&#108;&#x65;&#46;&#99;&#x6f;&#x6d;">your_email@example.com</a>替换为你的 GitHub 注册邮箱)：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;your_email@example.com&quot;</span> <br></code></pre></td></tr></table></figure><p> <br>2. 按 3 次回车（默认保存路径、不设密码），密钥文件默认路径：</p><ul><li>Windows： C:\Users\用户名.ssh </li><li>macOS&#x2F;Linux： ~&#x2F;.ssh <br>3. 找到  id_rsa.pub （公钥文件），用记事本打开并复制全部内容。<br>4. 登录 GitHub，依次点击：右上角头像 → Settings → 左侧 SSH and GPG keys → New SSH key。<br><img src="/images/2.png" alt="图片"><br>5. Title 填自定义名称（如“我的设备”），Key 粘贴公钥，点击 Add SSH key。<br>6. 验证连接：命令行输入  ssh -T <a href="mailto:&#x67;&#105;&#116;&#x40;&#103;&#x69;&#116;&#x68;&#x75;&#x62;&#x2e;&#x63;&#111;&#x6d;">git@github.com</a> ，输入  yes  后，显示 “Hi 用户名! You’ve successfully authenticated…” 即成功。</li></ul><h2 id="二、配置-Hexo-与-GitHub-关联（实现部署）"><a href="#二、配置-Hexo-与-GitHub-关联（实现部署）" class="headerlink" title="二、配置 Hexo 与 GitHub 关联（实现部署）"></a>二、配置 Hexo 与 GitHub 关联（实现部署）</h2><p>(一)修改 Hexo 配置文件，指定部署目标仓库：</p><ol><li>进入本地博客根目录（即上一篇博客中的新建文件夹），找到  _config.yml  文件（Hexo 全局配置），用记事本打开。</li><li>滚动到文件末尾，找到  deploy  部分，替换为以下内容（仓库地址替换为你的 GitHub 仓库地址）：</li></ol><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dts">yaml<br><span class="hljs-symbol">  </span><br><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/用户名/用户名.github.io.git  # 替换为你的仓库地址（SSH 地址也可：git@github.com:用户名/用户名.github.io.git）</span><br><span class="hljs-symbol">  branch:</span> main  <span class="hljs-meta"># 需与 GitHub 仓库默认分支一致（新版默认是 main，旧版是 master）</span><br></code></pre></td></tr></table></figure><p> <br>3. 安装 Hexo 部署插件：在命令行（确保处于  blog  文件夹下）输入，实现 Git 部署功能：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>(二)还有第二种办法<br>  打开cmd窗口：执行如下命令：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;yourname&quot;</span> <br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;youremail&quot;</span><br></code></pre></td></tr></table></figure><p>   防止输错可以检查：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git config <span class="hljs-keyword">user</span>.name <br>git config <span class="hljs-keyword">user</span>.email<br></code></pre></td></tr></table></figure><h2 id="三、发布博客到-GitHub-Pages"><a href="#三、发布博客到-GitHub-Pages" class="headerlink" title="三、发布博客到 GitHub Pages"></a>三、发布博客到 GitHub Pages</h2><p>完成配置后，将本地博客推送到 GitHub Pages：</p><p>1. （可选）创建测试文章：命令行输入（标题可自定义），文章会保存在  blog&#x2F;source&#x2F;_posts  文件夹（Markdown 格式，可直接编辑）：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><br>hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;我的第一篇 Hexo 博客&quot;</span><br></code></pre></td></tr></table></figure><p>2. 清理并生成静态文件：避免旧文件冲突，命令行依次输入：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo clean  # 清理旧的静态文件<br>hexo g      # 等同于 hexo <span class="hljs-keyword">generate</span>，生成新的静态 HTML 等文件<br></code></pre></td></tr></table></figure><p>3. 部署到 GitHub：命令行输入，推送静态文件到 GitHub 仓库：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> d  <span class="hljs-comment"># 等同于 hexo deploy</span><br></code></pre></td></tr></table></figure><ul><li>用 SSH 连接：无需输入账号密码，直接部署。<br>4. 访问博客：等待 1-5 分钟（GitHub 同步），浏览器输入  https:&#x2F;&#x2F;用户名.github.io ，即可看到已部署的博客。</li></ul><h2 id="疑难杂症"><a href="#疑难杂症" class="headerlink" title="疑难杂症"></a>疑难杂症</h2><ol><li>GitHub的用户名在哪？ 答：括号里面的内容<img src="/images/3.png" alt="图片"></li><li>输入这两条命令时，name和“中间有空格的，记得检查一下。</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;yourname&quot;</span> <br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;youremail&quot;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>如果上传不了，可能需要神奇的魔法（梯子）。</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>安装软件</title>
    <link href="/2025/08/29/%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/"/>
    <url>/2025/08/29/%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><span id="more"></span><ul><li><p>[Git](<a href="https://git-scm.com/downloads">Git - Downloads</a>)</p></li><li><p>[Node.js](<a href="https://nodejs.org/zh-cn/download/">Node.js — Download Node.js®</a>)安装完成后，Win+R 输入 cmd 并打开，依次输入 node -v、npm -v 和 git –version 并回车，出现程序版本号即可。</p></li><li><p><img src="/images/1.png" alt="图片"></p></li><li><p>Hexo CLI(windows系统打开管理员权限的cmd)（要新建一个文件夹，这个文件夹是用来存放你博客的相关文件的，安装时先进入这个文件夹的相关目录）</p></li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-bullet">- </span>npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>结束</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>教程</tag>
      
      <tag>评论</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>建站过程</title>
    <link href="/2025/08/29/%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B/%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B/"/>
    <url>/2025/08/29/%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B/%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>🤔博客第一篇，我想写一下我的建站过程，也希望可以给其他想建站的人一点启示。</p><span id="more"></span><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul><li>一台联网的电脑</li><li>一个GitHub账号（我直接用Google账号登陆的）</li><li>一双灵活的手</li><li>一个聪明的小脑袋瓜O(∩_∩)O</li></ul><h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><p><a href="https://yusite.top/2025/08/29/%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/">安装软件</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/08/29/Hello%20World/Hello%20World/"/>
    <url>/2025/08/29/Hello%20World/Hello%20World/</url>
    
    <content type="html"><![CDATA[<p>你好，欢迎来到我的博客，本人是一名17岁的高中生，在尝试学习web知识，希望你能喜欢这个小破宅(●’◡’●)</p>]]></content>
    
    
    
    <tags>
      
      <tag>随写</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
